<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <Target Name="BaseConfig">
        <PropertyGroup>
            <OperatorName Condition="'$(OperatorName)' == ''">$(AssemblyName.ToLowerInvariant())</OperatorName>
            <KubeOpsCli Condition="'$(KubeOpsCli)' == ''">dotnet kubeops</KubeOpsCli>
            <KubeOpsGenRoot Condition="'$(KubeOpsGenRoot)' == ''">$(MSBuildProjectDirectory)\config</KubeOpsGenRoot>
            <KubeOpsGenDockerOut Condition="'$(KubeOpsGenDockerOut)' == ''">$(MSBuildProjectDirectory)</KubeOpsGenDockerOut>
            <KubeOpsGenCrdOut Condition="'$(KubeOpsGenCrdOut)' == ''">$(KubeOpsGenRoot)\crds</KubeOpsGenCrdOut>
            <KubeOpsGenRbacOut Condition="'$(KubeOpsGenRbacOut)' == ''">$(KubeOpsGenRoot)\rbac</KubeOpsGenRbacOut>
            <KubeOpsGenOperatorOut Condition="'$(KubeOpsGenOperatorOut)' == ''">$(KubeOpsGenRoot)\operator</KubeOpsGenOperatorOut>
            <KubeOpsGenInstallerOut Condition="'$(KubeOpsGenInstallerOut)' == ''">$(KubeOpsGenRoot)</KubeOpsGenInstallerOut>
        </PropertyGroup>
    </Target>

    <Target Name="GetAssemblyBeforeTimestamp" AfterTargets="BeforeCompile">
        <PropertyGroup>
            <KubeOpsAssemblyTimestampBeforeCompile>%(IntermediateAssembly.ModifiedTime)</KubeOpsAssemblyTimestampBeforeCompile>
        </PropertyGroup>
        <Message Text="Fetched intermediate assembly before compile timestamp: %(IntermediateAssembly.ModifiedTime)" />
    </Target>

    <Target Name="GetAssemblyAfterTimestamp" AfterTargets="CoreCompile">
        <PropertyGroup>
            <KubeOpsAssemblyTimestampAfterCompile>%(IntermediateAssembly.ModifiedTime)</KubeOpsAssemblyTimestampAfterCompile>
        </PropertyGroup>
        <Message Text="Fetched intermediate assembly before compile timestamp: %(IntermediateAssembly.ModifiedTime)" />
    </Target>

    <Target Name="GenerateCrds" DependsOnTargets="BaseConfig">
        <Message Text="Generating CRDs" Importance="high" />
        <Message Text="Configuration path: $(KubeOpsGenCrdOut)" Importance="normal" />
        <Exec Command="$(KubeOpsCli) generate crds --out $(KubeOpsGenCrdOut) $(MSBuildProjectFullPath)" />
    </Target>

    <Target Name="GenerateRbac" DependsOnTargets="BaseConfig">
        <Message Text="Generating RBAC roles" Importance="high" />
        <Message Text="Configuration path: $(KubeOpsGenRbacOut)" Importance="normal" />
        <Exec Command="$(KubeOpsCli) generate rbac --out $(KubeOpsGenRbacOut) $(MSBuildProjectFullPath)" />
    </Target>

    <Target Name="GenerateOperator" DependsOnTargets="BaseConfig">
        <Message Text="Generating Operator resources" Importance="high" />
        <Message Text="Configuration path: $(KubeOpsGenOperatorOut)" Importance="normal" />
        <Exec Command="$(KubeOpsCli) generate operator --out $(KubeOpsGenOperatorOut)" />
    </Target>

    <Target Name="GenerateDockerfile" DependsOnTargets="BaseConfig">
        <Message Text="Generating Dockerfile" Importance="high" />
        <Message Text="Dockerfile path: $(KubeOpsGenDockerOut)\Dockerfile" Importance="normal" />

        <Message Condition="Exists('$(KubeOpsGenDockerOut)\Dockerfile')"
                 Text="Dockerfile already exists, do not overwrite in case of custom config."
                 Importance="high" />
        <Exec Condition="!Exists('$(KubeOpsGenDockerOut)\Dockerfile')"
              Command="$(KubeOpsCli) generate docker --out $(KubeOpsGenDockerOut)" />
    </Target>

    <Target Name="GenerateInstaller" DependsOnTargets="BaseConfig">
        <Message Text="Generating Operator Installer" Importance="high" />
        <Message Text="Dockerfile path: $(KubeOpsGenInstallerOut)" Importance="normal" />

        <Message Condition="Exists('$(KubeOpsGenInstallerOut)\kustomization.yaml')"
                 Text="Installer already exists, do not overwrite in case of custom config."
                 Importance="high" />
        <Exec Condition="!Exists('$(KubeOpsGenInstallerOut)\kustomization.yaml')"
              Command="$(KubeOpsCli) generate installer --out $(KubeOpsGenInstallerOut) $(OperatorName)" />
    </Target>

    <Target Name="GenerateOperatorResources"
            AfterTargets="CopyFilesToOutputDirectory"
            DependsOnTargets="BaseConfig"
            Condition="'$(OutputType.ToLowerInvariant())' == 'exe' And ('$(KubeOpsAssemblyTimestampBeforeCompile)' != '$(KubeOpsAssemblyTimestampAfterCompile)' Or '$(Configuration)' == 'Release')">
        <Exec IgnoreExitCode="true" StandardOutputImportance="low" StandardErrorImportance="low"
              Command="$(KubeOpsCli) -h">
            <Output TaskParameter="ExitCode" PropertyName="CliInstalled" />
        </Exec>
        <Message Importance="high" Condition="$(CliInstalled) == 1"
                 Text="KubeOps CLI is not installed as tool, cannot generate stuff for projects. Please install it with 'dotnet tool install KubeOps.Cli' to use automatic build generation." />
        <CallTarget ContinueOnError="true" Targets="GenerateCrds"
                    Condition="$(CliInstalled) == 0 And '$(KubeOpsSkipCrds)' == ''" />
        <CallTarget ContinueOnError="true" Targets="GenerateRbac"
                    Condition="$(CliInstalled) == 0 And '$(KubeOpsSkipRbac)' == ''" />
        <CallTarget ContinueOnError="true" Targets="GenerateOperator"
                    Condition="$(CliInstalled) == 0 And '$(KubeOpsSkipOperator)' == ''" />
        <CallTarget ContinueOnError="true" Targets="GenerateDockerfile"
                    Condition="$(CliInstalled) == 0 And '$(KubeOpsSkipDocker)' == ''" />
        <CallTarget ContinueOnError="true" Targets="GenerateInstaller"
                    Condition="$(CliInstalled) == 0 And '$(KubeOpsSkipInstaller)' == ''" />
    </Target>
</Project>